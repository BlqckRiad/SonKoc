// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YksProject.DataAccessLayer.Concrete;

namespace YksProject.DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240317190811_YapilacaklarEntityAdded")]
    partial class YapilacaklarEntityAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.Abonelik", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbonePaketAciklamasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbonePaketAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AbonelikUcreti")
                        .HasColumnType("int");

                    b.HasKey("TabloID");

                    b.ToTable("Abonelik");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("KisiDogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KisiKayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("KisiSonGirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ObpPuani")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserAdress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserSchool")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.BaseModel", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AktifEdenKisiID")
                        .HasColumnType("int");

                    b.Property<int>("AktifMi")
                        .HasColumnType("int");

                    b.Property<DateTime>("AktiflikTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuncellendiMi")
                        .HasColumnType("int");

                    b.Property<int>("GuncelleyenKisiID")
                        .HasColumnType("int");

                    b.Property<int>("SilenKisiID")
                        .HasColumnType("int");

                    b.Property<int>("SilindiMi")
                        .HasColumnType("int");

                    b.Property<DateTime>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("TabloID");

                    b.ToTable("BaseModel");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.Bolumler", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BolumAdKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BolumAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TabloID");

                    b.ToTable("Bolumler");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.Dersler", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DersAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DersKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DersSoruSayisi")
                        .HasColumnType("int");

                    b.Property<int>("IlgiliSinavTipiID")
                        .HasColumnType("int");

                    b.HasKey("TabloID");

                    b.ToTable("Dersler");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.GirilenSinav", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GirenKisiID")
                        .HasColumnType("int");

                    b.Property<string>("GirilenSinavAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GirilenSinavinTipi")
                        .HasColumnType("int");

                    b.Property<DateTime>("SinavBitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SinavGirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SinavSonucu")
                        .HasColumnType("int");

                    b.HasKey("TabloID");

                    b.ToTable("GirilenSinav");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.Kisi", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboneTipi")
                        .HasColumnType("int");

                    b.Property<int>("KisiAboneMi")
                        .HasColumnType("int");

                    b.Property<DateTime>("KisiAbonelikTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KisiAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KisiGirdigiSinavlar")
                        .HasColumnType("int");

                    b.Property<string>("KisiImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KisiObpDegeri")
                        .HasColumnType("int");

                    b.Property<DateTime>("KisiSonGirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KisiSoyAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KisiYasi")
                        .HasColumnType("int");

                    b.HasKey("TabloID");

                    b.ToTable("Kisi");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.Referanslarimiz", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReferansAciklamasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferansAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferansImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferansPuani")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TabloID");

                    b.ToTable("Referanslarimiz");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.Sinav", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SinavAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SinavKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SinavSüresi")
                        .HasColumnType("int");

                    b.HasKey("TabloID");

                    b.ToTable("Sinav");
                });

            modelBuilder.Entity("YksProject.EntityLayer.Concrete.Yapilacaklar", b =>
                {
                    b.Property<int>("TabloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("GorevEklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GorevYapilmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("KisiID")
                        .HasColumnType("int");

                    b.Property<string>("YapilacakGorevAciklamasi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YapilacakGorevAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YapilacakGorevGun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YapilacakGorevGunNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YapilacakGorevIkon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YapildiMi")
                        .HasColumnType("int");

                    b.HasKey("TabloID");

                    b.ToTable("Yapilacaklar");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("YksProject.EntityLayer.Concrete.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("YksProject.EntityLayer.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("YksProject.EntityLayer.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("YksProject.EntityLayer.Concrete.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YksProject.EntityLayer.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("YksProject.EntityLayer.Concrete.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
